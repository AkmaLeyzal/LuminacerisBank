version: '3.8'

services:
  # ============================
  # Microservices
  # ============================

  auth_service:
    image: akmaleyzal/luminaceris-bank/auth_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=auth_db
      - DATABASE_USER=auth_admin
      - DATABASE_PASSWORD=${AUTH_DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_AUTH_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - postgres
      - kafka

  user_management_service:
    image: akmaleyzal/luminaceris-bank/user_management_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=user_db
      - DATABASE_USER=user_admin
      - DATABASE_PASSWORD=${USER_DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_USER_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - postgres
      - kafka

  account_service:
    image: akmaleyzal/luminaceris-bank/account_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=account_db
      - DATABASE_USER=account_admin
      - DATABASE_PASSWORD=${ACCOUNT_DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_ACCOUNT_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - postgres
      - kafka

  transaction_service:
    image: akmaleyzal/luminaceris-bank/transaction_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=transaction_db
      - DATABASE_USER=transaction_admin
      - DATABASE_PASSWORD=${TRANSACTION_DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_TRANSACTION_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - postgres
      - kafka

  payment_service:
    image: akmaleyzal/luminaceris-bank/payment_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=payment_db
      - DATABASE_USER=payment_admin
      - DATABASE_PASSWORD=${PAYMENT_DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_PAYMENT_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - postgres
      - kafka

  card_management_service:
    image: akmaleyzal/luminaceris-bank/card_management_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=card_db
      - DATABASE_USER=card_admin
      - DATABASE_PASSWORD=${CARD_DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_CARD_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - postgres
      - kafka

  loan_service:
    image: akmaleyzal/luminaceris-bank/loan_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=loan_db
      - DATABASE_USER=loan_admin
      - DATABASE_PASSWORD=${LOAN_DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_LOAN_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - postgres
      - kafka

  notification_service:
    image: akmaleyzal/luminaceris-bank/notification_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=notification_db
      - DATABASE_USER=notification_admin
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - postgres
      - mongodb
      - kafka

  audit_service:
    image: akmaleyzal/luminaceris-bank/audit_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=audit_db
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_AUDIT_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - kafka
      - mongodb

  fraud_detection_service:
    image: akmaleyzal/luminaceris-bank/fraud_detection_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=fraud_db
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_FRAUD_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - kafka
      - mongodb

  support_service:
    image: akmaleyzal/luminaceris-bank/support_service:latest
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_NAME=support_db
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY_SUPPORT_SERVICE}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - webnet
    depends_on:
      - kafka
      - mongodb


  # ============================
  # Microfrontends
  # ============================

  login_page:
    image: akmaleyzal/luminaceris-bank/login_page:latest
    networks:
      - webnet

  home_page:
    image: akmaleyzal/luminaceris-bank/home_page:latest
    networks:
      - webnet

  cardManagement_page:
    image: akmaleyzal/luminaceris-bank/cardManagement_page:latest
    networks:
      - webnet

  fraudAlert_page:
    image: akmaleyzal/luminaceris-bank/fraudAlert_page:latest
    networks:
      - webnet

  history_page:
    image: akmaleyzal/luminaceris-bank/history_page:latest
    networks:
      - webnet

  loan_page:
    image: akmaleyzal/luminaceris-bank/loan_page:latest
    networks:
      - webnet

  notificationCenter_page:
    image: akmaleyzal/luminaceris-bank/notificationCenter_page:latest
    networks:
      - webnet

  paymentService_page:
    image: akmaleyzal/luminaceris-bank/paymentService_page:latest
    networks:
      - webnet

  profileSetting_page:
    image: akmaleyzal/luminaceris-bank/profileSetting_page:latest
    networks:
      - webnet

  support_page:
    image: akmaleyzal/luminaceris-bank/support_page:latest
    networks:
      - webnet

  transfer_page:
    image: akmaleyzal/luminaceris-bank/transfer_page:latest
    networks:
      - webnet

  # ============================
  # Nginx sebagai Reverse Proxy
  # ============================

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"  # Tidak menggunakan SSL
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Mount build directories dari setiap microfrontend
      - ./microfrontend/login_page/build:/usr/share/nginx/html/login_page:ro
      - ./microfrontend/home_page/build:/usr/share/nginx/html/home_page:ro
      - ./microfrontend/cardManagement_page/build:/usr/share/nginx/html/cardManagement_page:ro
      - ./microfrontend/fraudAlert_page/build:/usr/share/nginx/html/fraudAlert_page:ro
      - ./microfrontend/history_page/build:/usr/share/nginx/html/history_page:ro
      - ./microfrontend/loan_page/build:/usr/share/nginx/html/loan_page:ro
      - ./microfrontend/notificationCenter_page/build:/usr/share/nginx/html/notificationCenter_page:ro
      - ./microfrontend/paymentService_page/build:/usr/share/nginx/html/paymentService_page:ro
      - ./microfrontend/profileSetting_page/build:/usr/share/nginx/html/profileSetting_page:ro
      - ./microfrontend/support_page/build:/usr/share/nginx/html/support_page:ro
      - ./microfrontend/transfer_page/build:/usr/share/nginx/html/transfer_page:ro
    depends_on:
      - login_page
      - home_page
      - cardManagement_page
      - fraudAlert_page
      - history_page
      - loan_page
      - notificationCenter_page
      - paymentService_page
      - profileSetting_page
      - support_page
      - transfer_page
      # Tambahkan dependencies untuk microservices lainnya jika ada
      - auth_service
      - user_management_service
      - account_service
      - transaction_service
      - payment_service
      - card_management_service
      - loan_service
      - notification_service
      - audit_service
      - fraud_detection_service
      - support_service
    networks:
      - webnet

  # ============================
  # Layanan Pendukung
  # ============================

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - webnet

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - webnet

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - webnet

# ============================
# Jaringan dan Volume
# ============================

networks:
  webnet:

volumes:
  postgres_data:
  mongodb_data: