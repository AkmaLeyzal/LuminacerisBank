# Generated by Django 5.1.1 on 2024-11-28 08:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_index=True)),
                ('account_number', models.CharField(db_index=True, help_text='Unique account number', max_length=20, unique=True)),
                ('account_type', models.CharField(choices=[('SAVINGS', 'Savings Account')], default='SAVINGS', max_length=50)),
                ('currency', models.CharField(choices=[('IDR', 'Indonesian Rupiah'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('SGD', 'Singapore Dollar')], default='IDR', max_length=3)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, help_text='Current balance in account', max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('available_balance', models.DecimalField(decimal_places=2, default=0.0, help_text='Available balance after holds', max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('hold_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Amount on hold', max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('daily_transfer_limit', models.DecimalField(decimal_places=2, default=50000000.0, max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('daily_transfer_used', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('minimum_balance', models.DecimalField(decimal_places=2, default=50000.0, max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('BLOCKED', 'Blocked'), ('CLOSED', 'Closed'), ('DORMANT', 'Dormant')], db_index=True, default='ACTIVE', max_length=20)),
                ('is_blocked', models.BooleanField(default=False)),
                ('block_reason', models.TextField(blank=True, null=True)),
                ('blocked_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_transaction_date', models.DateTimeField(blank=True, null=True)),
                ('dormant_since', models.DateTimeField(blank=True, null=True)),
                ('branch_code', models.CharField(blank=True, max_length=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'bank_accounts',
                'indexes': [models.Index(fields=['user_id'], name='bank_accoun_user_id_ac4793_idx'), models.Index(fields=['account_number'], name='bank_accoun_account_a5c8c7_idx'), models.Index(fields=['status'], name='bank_accoun_status_62f9cb_idx'), models.Index(fields=['last_activity'], name='bank_accoun_last_ac_86220a_idx')],
            },
        ),
        migrations.CreateModel(
            name='AccountBalanceLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('old_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('new_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('change_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('change_type', models.CharField(choices=[('CREDIT', 'Credit'), ('DEBIT', 'Debit'), ('ADJUSTMENT', 'Adjustment'), ('REVERSAL', 'Reversal'), ('HOLD', 'Hold'), ('RELEASE_HOLD', 'Release Hold')], max_length=50)),
                ('transaction_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('performed_by', models.CharField(max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_logs', to='account.bankaccount')),
            ],
            options={
                'db_table': 'account_balance_logs',
                'indexes': [models.Index(fields=['account', 'created_at'], name='account_bal_account_d68a80_idx'), models.Index(fields=['transaction_reference'], name='account_bal_transac_12da3f_idx'), models.Index(fields=['change_type'], name='account_bal_change__536faf_idx')],
            },
        ),
    ]
